name: retag alpha release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  retag-alpha:
    runs-on: ubuntu-latest
    env:
      REPO: ${{ github.repository }}
      OLD_TAG: ${{ github.event.release.tag_name }}
      GH_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }} # ou use secrets.GITHUB_TOKEN
    steps:
      - name: Check if release came from feature/*
        id: check
        shell: bash
        run: |
          set -euo pipefail
          SHA="${{ github.event.release.target_commitish }}"
          # Quais branches tÃªm HEAD == SHA?
          BRANCHES=$(gh api "repos/$REPO/commits/$SHA/branches-where-head" -q '.[].name' || true)
          echo "Branches for $SHA:"; echo "$BRANCHES"
          if echo "$BRANCHES" | grep -E '^feature/'; then
            echo "is_feature=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_feature=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Retag release as alpha
        if: steps.check.outputs.is_feature == 'true' && contains(env.OLD_TAG, 'v') && !contains(env.OLD_TAG, '-')
        shell: bash
        run: |
          set -euo pipefail

          git config --global user.name  "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git init
          git remote add origin "https://x-access-token:${GH_TOKEN}@github.com/${REPO}.git"
          git fetch --tags --force --prune origin

          COUNT=$(git tag -l "${OLD_TAG}-alpha.*" | wc -l | tr -d ' ')
          N=$((COUNT+1))
          NEW_TAG="${OLD_TAG}-alpha.${N}"
          echo "Renomeando tag ${OLD_TAG} -> ${NEW_TAG}"

          COMMIT=$(git rev-list -n 1 "${OLD_TAG}")
          git tag -f "${NEW_TAG}" "${COMMIT}"
          git push origin "refs/tags/${NEW_TAG}"
          git push origin ":refs/tags/${OLD_TAG}"

          gh api -X PATCH "repos/${REPO}/releases/${{ github.event.release.id }}" \
            -f tag_name="${NEW_TAG}" \
            -f prerelease=true
